// This is your Prisma schema file,
// learn more about it in the docs https//pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL_LOCAL")
}

// ===========================================================================================================
// ===========================================================================================================

model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  username String @unique
  password String

  email       String? @unique
  phoneNumber String?

  firstName String?
  lastName  String?

  province String?
  district String?
  ward     String?
  address  String?
  gender   Gender?
  birthDay DateTime?

  avatar String   @default("https://res.cloudinary.com/vhh/image/upload/v1665845758/product-ecommerce/istockphoto-476085198-612x612_bt6y0m.jpg")
  status Boolean?

  role Role @default(USER)

  Shop           Shop?
  Favorite       Favorite[]
  Cart           Cart[]
  Order          Order[]
  Shop_rating    Shop_rating[]
  Product_rating Product_rating[]

  isActive Boolean   @default(true)
  Comment  Comment[]
}

enum Role {
  USER
  VENDOR
  ADMIN
}

// ===========================================================================================================
// ===========================================================================================================

model Shop {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name String

  description String
  content     String?

  province String
  district String
  ward     String
  address  String

  email       String?
  phoneNumber String

  logo   String  @default("https://res.cloudinary.com/vhh/image/upload/v1665845746/product-ecommerce/74827_of9gt0.png")
  banner String?

  user User @relation(fields: [UID], references: [id])
  UID  Int  @unique

  Product     Product[]
  Shop_rating Shop_rating[]
  Order       Order[]

  isActive Boolean @default(true)
}

// ===========================================================================================================
// ===========================================================================================================

model Product {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name String

  BID Int?

  shop Shop @relation(fields: [SID], references: [id])
  SID  Int

  CID Int?

  sku            String?
  description    String?
  content        String?
  isHome         Boolean @default(true)
  saled          Int     @default(0)
  quantity       Int?
  price          Int?
  estimatedPrice Int?

  image String[] @default(["https://res.cloudinary.com/vhh/image/upload/v1665845768/product-ecommerce/76007_vyvril.png"])

  isActive Boolean @default(true)

  Favorite       Favorite[]
  Cart           Cart[]
  Order_detail   Order_detail[]
  Comment        Comment[]
  Product_rating Product_rating[]
  sale_off       Sale_off?
}

enum Gender {
  male
  female
  none
}

// ===========================================================================================================
// ===========================================================================================================

model Category {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name        String  @unique
  description String?
  image       String?
}

// ===========================================================================================================
// ===========================================================================================================

model Brand {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name        String
  description String?
  image       String?
}

model Favorite {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [UID], references: [id])
  UID  Int

  product Product @relation(fields: [PID], references: [id])
  PID     Int

  isActive Boolean @default(true)
}

// ===========================================================================================================
// ===========================================================================================================

model Cart {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [UID], references: [id])
  UID  Int

  product Product @relation(fields: [PID], references: [id])
  PID     Int

  quantity Int

  isActive Boolean @default(true)
}

// ===========================================================================================================
// ===========================================================================================================

model Order {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  code String?

  status        orderProcess  @default(created)
  total         Float
  paymentMethod paymentMethod

  user User @relation(fields: [UID], references: [id])
  UID  Int

  shop Shop @relation(fields: [SID], references: [id])
  SID  Int

  Note String?

  userPay   Boolean @default(false)
  payVendor Boolean @default(false)

  isActive     Boolean        @default(true)
  Order_detail Order_detail[]
}

enum orderProcess {
  created
  confirm
  delivering
  delivered
  cancel
  done
}

enum paymentMethod {
  online
  offline
}

// ===========================================================================================================
// ===========================================================================================================

model Order_detail {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  order Order @relation(fields: [OID], references: [id])
  OID   Int

  product Product @relation(fields: [PID], references: [id])
  PID     Int

  quantity Int
  total    Float
  fee      Float
}

model Comment {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [UID], references: [id])
  UID  Int

  product Product @relation(fields: [PID], references: [id])
  PID     Int

  content String
}

// ===========================================================================================================
// ===========================================================================================================

model Product_rating {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [UID], references: [id])
  UID  Int

  product Product @relation(fields: [PID], references: [id])
  PID     Int

  score   Int     @default(0)
  content String?
}

model Shop_rating {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [UID], references: [id])
  UID  Int

  shop Shop @relation(fields: [SID], references: [id])
  SID  Int

  score   Int     @default(0)
  content String?
}

model Conversation {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  senderId Int

  receiverId Int

  content String
}

model Sale_off {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  amount Int

  quantity Int

  start DateTime

  end DateTime

  product Product @relation(fields: [PID], references: [id])
  PID     Int     @unique
}

model News {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  title   String
  content String
}
